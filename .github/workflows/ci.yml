#influx command to create all access token - > then write to env variable.
#influx auth create --org my-org --all-access
#
# 
name: CI
on:
  pull_request:
  push:
    branches: [main]
    tags: ['*']
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    container: ubuntu
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'
          - '1.6' # automatically expands to the latest stable 1.6.x release of Julia
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
        #include:
        #  - os: windows-latest
        #    version: '1'
        #    arch: x86
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      influxdb:
        # Docker Hub image
        image: influxdb
        # Provide the password 
        env:
          DOCKER_INFLUXDB_INIT_MODE: setup
          DOCKER_INFLUXDB_INIT_ORG: ${{ secrets.INFLUXDB_ORG }}
          DOCKER_INFLUXDB_INIT_USERNAME: ${{ secrets.INFLUXDB_USER }}
          DOCKER_INFLUXDB_INIT_PASSWORD: ${{ secrets.INFLUXDB_PASSWORD }}
          DOCKER_INFLUXDB_INIT_BUCKET: some_bucket
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
        ports:
          # Maps tcp port on service container to the host
          - 8086:8086

    steps:    
      - name: Check out repo
        uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          JULIA_NUM_THREADS: 4          
          #must include PORT too here:
          #The hostname of the PostgreSQL service is the label you configured in your workflow, in this case, postgres. Because Docker containers on the same user-defined bridge network open all ports by default, you'll be able to access the service container on the default PostgreSQL port 5432.
          INFLUXDB_HOST: localhost:8086
          INFLUXDB_URL: http://localhost:8086
          INFLUXDB_ORG: ${{ secrets.INFLUXDB_ORG }}
          INFLUXDB_USER: ${{ secrets.INFLUXDB_USER }}
          INFLUXDB_PASSWORD: ${{ secrets.INFLUXDB_PASSWORD }}
          INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          files: lcov.info
  
